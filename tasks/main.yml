---
- include_role:
    name: openio-service
  vars:
    openio_service_type: "oio-kibana"
    openio_service_namespace: "{{ openio_kibana_namespace }}"
    openio_service_maintenance_mode: "{{ openio_kibana_maintenance_mode }}"
    openio_service_packages:
      - oio-kibana
    openio_service_directories:
      - path: "{{ openio_service_volume }}"
    openio_service_configuration_files:
      - name: kibana.yml

    openio_service_services:
      - command: >-
          /usr/share/oio-kibana/bin/kibana
          -c {{Â openio_service_conf_dir }}/kibana.yml
        redirect_stdout_to_syslog: true

    openio_service_checks:
      - uri:
          url: "{{ openio_kibana_url }}/api/status"
        until: >
          'json' in _return
          and 'status' in _return.json
          and 'overall' in _return.json.status
          and _return.json.status.overall.state | d('nok') == 'green'
        retries: 30
        delay: 2

- name: Create index pattern
  uri:
    url: "{{ openio_kibana_url }}/api/saved_objects/index-pattern/oio-filebeat"
    method: POST
    body:
      attributes:
        title: "oio-filebeat"
        timeFieldName: "@timestamp"
    headers:
      kbn-xsrf: anything
    body_format: json
    status_code:
      - 200
      - 409
  retries: 5
  delay: 5
  register: _fb_index
  until: "_fb_index.status in [200, 409]"
  tags: configure
  ignore_errors: "{{ ansible_check_mode }}"

- name: Set index pattern as default
  uri:
    url: "{{ openio_kibana_url }}/api/kibana/settings/defaultIndex"
    method: POST
    body:
      value: "oio-filebeat"
    headers:
      kbn-xsrf: anything
    body_format: json
    status_code:
      - 200
  when: _fb_index.status == 200
  retries: 5
  delay: 5
  register: _fb_index_default
  until: "_fb_index_default.status in [200]"
  tags: configure
  ignore_errors: "{{ ansible_check_mode }}"
...
